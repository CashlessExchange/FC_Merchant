{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController, Platform } from 'ionic-angular';\nimport { User } from '../../providers/providers';\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio';\nimport { MainPage } from '../pages';\nimport { Storage } from '@ionic/storage';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: '',\n    password: ''\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n  private merchid: string;\n\n  constructor(public navCtrl: NavController,\n    private fingerprint: FingerprintAIO,\n    private storage:Storage,\n    public user: User,\n    public platform: Platform,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n    this.platform.ready().then((ready) => {\n      this.checkData();\n      \n    });\n  }\n\n  async setData(merchid:string) {\n\n    this.storage.set('merchant', merchid);\n    this.storage.set('loginnameMerch', merchid);\n  \n\n  }\n\n  async checkData() {\n    if (!this.platform.is('core')) {\n\n     await this.storage.get('loginname').then((val) => {\n      if (val != null && val != undefined) {\n        this.account.email = val;\n      }\n      });\n\n      await this.storage.get('merchant').then((val) => {\n        if (val != null && val != undefined) {\n          this.merchid = val;\n          \n          this.fingerprintLogin();        }\n        });\n\n    }\n  }\n\n  async fingerprintLogin() {\n    await this.fingerprint.isAvailable().then(result => {\n\n      this.fingerprint.show({\n        clientId: \"freedom-choice\",\n        clientSecret: \"password\",\n        localizedReason: \"please authenticate\"\n      }).then(result => {\n        this.navCtrl.setRoot(MainPage);\n      }).catch((err) => {\n        console.log(err);\n      });\n    });\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n\n    let type = \"merchantLogin.php?email=\" + this.account.email + \"&password=\" + this.account.password;\n\n    this.user.login(this.account, type).subscribe((resp: any) => {\n\n      if (resp.status === \"Success\" && resp.message === \"Merchant logged in successfully\") {\n        let merchid:string = resp.merchantId;       \n        this.platform.ready().then((ready) => {\n          //this.storage.set('merchant', merchid);\n          \n          this.setData(merchid);\n          \n        }); \n\n        this.navCtrl.setRoot(MainPage);\n      } else {\n        let toast = this.toastCtrl.create({\n          message: \"Username or Password wrong\",\n          duration: 3000,\n          position: 'top'\n        });\n        toast.present();\n      }\n\n      //this.navCtrl.push(MainPage);\n    }, (err) => {\n      console.log(err);\n      //this.navCtrl.push(MainPage);\n\n      // Unable to log in\n      let toast = this.toastCtrl.create({\n        message: this.loginErrorString,\n        duration: 3000,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n\n  doSignup() {\n    this.navCtrl.push('SignupPage');\n  }\n\n  getPassword() {\n    this.navCtrl.push('PasswordPage');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}